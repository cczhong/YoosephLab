#!/usr/bin/perl -w
use strict;

my $hmmgrasp_file = shift;	# the hmm-graspx recruited file
my $sam_file = shift;		# the SAM file generated by read-mapper
my $header_file = shift;	# the header of the database to which the reads are mapped to

# pooling the reads at a genus/species level
# assuming the HOMD header format
# something like: >AEVF01000001 AEVF01000001.1 Streptococcus peroris ATCC 700780 contig00001, whole genome shotgun sequence.
# the first column is the ID, the third column uniquely defines the genus, and the third and fourth columns uniquely define the species

# process the header file, build ID to genus/species mapping
my %id_mapping;
open my $HIN, "<$header_file" or die "Cannot open file: $!\n";
while(<$HIN>)  {
  chomp;
  my @decom = split /\s+/, $_;
  $decom[0] =~ /^>(.*)/;
  my $key_id = $1;					# refers to the HOMD header format
  my $value_id = $decom[2] . '_' . $decom[3];		# refers to the HOMD header format, pools at species level
  #my $value_id = $decom[2];				# refers to the HOMD header format, pools at genus level
  $id_mapping{$key_id} = $value_id;
}
close $HIN;

# then parse the HMM-GRASPx results
my %recruit_mapping;
open my $GIN, "<$hmmgrasp_file" or die "Cannot open file: $!\n";
while(<$GIN>)  {
  chomp;
  my @decom = split /\s+/, $_;
  my @decom2 = split /\_/, $decom[1];
  my @decom3 = split /\|\|/, $decom[2];
  $recruit_mapping{$decom2[0]} = $decom3[1];
}
close $GIN;

# then count the number of reads for each gene regarding pooled genus/species
my %read_mapping;
open my $SIN, "<$sam_file" or die "Cannot open file: $!\n";
while(<$SIN>)  {
  chomp;
  my @decom = split /\s+/, $_;
  if(exists $id_mapping{$decom[2]} and exists $recruit_mapping{$decom[0]})  {
    my $taxa_id = $id_mapping{$decom[2]};
    my $gene_id = $recruit_mapping{$decom[0]};
    ++ $read_mapping{$taxa_id}{$gene_id};
  }
}
close $SIN;

foreach(keys %read_mapping)  {
  my $taxa_id = $_;
  foreach(keys %{$read_mapping{$taxa_id}})  {
    print "$taxa_id	$_	$read_mapping{$taxa_id}{$_}\n";
  }
}
