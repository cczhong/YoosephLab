#!/usr/bin/perl -w
use strict;

my $ref_table = shift;	# the table generated by analyzing HMMER3 results using SummarizeHmmerResults.pl
my $sam_file = shift;	# the SAM file for the mapping of the reads
my $constraint = shift;	# a set of reads that one is looking at

my %cons_hash;
open my $CIN, "<$constraint" or die "Cannot open file: $!\n";
while(<$CIN>)  {
  chomp;
  my $id = $_;
  if($id =~ /^>(.*)/)  {
    $id = $1;
  }
  my @decom = split /\_/, $id;
  $cons_hash{$decom[0]} = 1;
}
close $CIN;

my %region_annot;
my %g_loc_annot;
open my $IN, "<$ref_table" or die "Cannot open file: $!\n";
while(<$IN>)  {
  chomp;
  my @decom = split /\s+/, $_;
  my @decom2 = split /\_/, $decom[1];
  # converting the indexes
  my $begin;
  my $end;
  my $strand_id = scalar(@decom2) - 1;
  my $rend_id = scalar(@decom2) - 2;
  my $rbegin_id = scalar(@decom2) - 3;
  my $info_str = $decom2[$rbegin_id] . '_' . $decom2[$rend_id] . '_' . $decom2[$strand_id];
  $decom[1] =~ /(.*)\_$info_str/;
  my $target_id = $1;
  if($decom2[$strand_id] eq '+')  {
    $begin = $decom2[$rbegin_id] + 3 * ($decom[4] - 1);
    $end = $begin + ($decom[5] - $decom[4]) * 3 - 1;
  }  elsif($decom2[$strand_id] eq '-')  {
    $end = $decom2[$rend_id] - 3 * ($decom[4] - 1);
    $begin = $end - ($decom[5] - $decom[4]) * 3 + 1;
  }
  $g_loc_annot{$decom[1]} = $decom[0];
  my @info = ($begin, $end, $decom[0], $decom[1]);
  push @{$region_annot{$target_id}}, \@info;
}
close $IN;

#foreach(keys %region_annot)  {
#  my $k = $_;
#  for(my $i = 0; $i < scalar(@{$region_annot{$k}}); ++ $i)  {
#    print "${$region_annot{$k}}[$i][0]	${$region_annot{$k}}[$i][1]\n";
#  }
#}
#exit();

sub GetOverlap($$$$)  {
  my $a = shift;
  my $b = shift;
  my $c = shift;
  my $d = shift;
  if($a <= $c and $b >= $d)  {
    return $d - $c + 1;
  }  elsif($c <= $a and $d >= $b)  {
    return $b - $a + 1;
  }  elsif($b < $c or $a > $d)  {
    return 0;
  }  elsif($a <= $c and $c <= $b and $b <= $d)  {
    return $b - $c + 1;
  }  elsif($c <= $a and $a <= $d and $d <= $b)  {
    return $d - $a + 1;
  }
  die "ERROR:   $a      $b      $c      $d\n";
}

# process the SAM file one-by-one
my %g_loc_count;
foreach(keys %g_loc_annot)  {
  $g_loc_count{$_} = 0;
}
open my $SIN, "<$sam_file" or die "Cannot open file: $!\n";
while(<$SIN>)  {
  chomp;
  my @decom = split /\s+/, $_;
  if(!exists $cons_hash{$decom[0]})  {
    next;
  }
  my $r_len = length($decom[9]);
  my $begin = $decom[3] - 1;
  my $end = $begin + $r_len - 1;
  my $target = $decom[2];
  # identify the maximal mapped region, requires at least 60% of the read included
  my $max_ov = 0;
  my $annot;
  my $g_loc;
  if(!exists $region_annot{$target})  {
    next;
  }
  for(my $i = 0; $i < scalar(@{$region_annot{$target}}); ++ $i)  {
    my $o = GetOverlap($begin, $end, $region_annot{$target}->[$i][0], $region_annot{$target}->[$i][1]);
    if ($o > $max_ov)  {
      $max_ov = $o;
      $annot = $region_annot{$target}->[$i][2];
      $g_loc = $region_annot{$target}->[$i][3];
    }
  }
  if($max_ov >= 0.6 * $r_len)  {
    #print "$decom[0]	$annot	$g_loc\n";
    ++ $g_loc_count{$g_loc};
  }
}
close $SIN;

foreach(sort keys %g_loc_count)  {
  my @decom = split /\_/, $_;
  print "$_\_$g_loc_annot{$_}	$decom[0]	$decom[1]	$decom[2]	$g_loc_count{$_}\n";
}
